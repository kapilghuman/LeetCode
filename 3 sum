Problem Statement :https://leetcode.com/problems/3sum

class Solution {
public:
    vector<vector<int>> threeSum(vector<int>& nums) {
        
        map<vector<int>,bool> present;
        sort(nums.begin(), nums.end());
        
        vector<vector<int>> ans;
        int j,k;
        vector<int> v;
        for(int i=0;i<nums.size()-2;i++)
        {
            j = i+1;
            k = nums.size()-1;
            
            while(j<k)
            {
                if(nums[i]+nums[j]+nums[k] == 0)
                {
                    v.push_back(nums[i]);                                         v.push_back(nums[j]);
                    v.push_back(nums[k]);
                    if(!present[v])
                    {
                        present[v] = true;
                        ans.push_back(v);
                    }
                    v.clear();
                    j++;
                }
                else if(nums[i]+nums[j]+nums[k] < 0)
                {
                    j++;
                }
                else
                {
                    k--;
                }
            }
        }
        return ans;
    }
}; 

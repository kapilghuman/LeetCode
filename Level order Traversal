Problem statement : https://leetcode.com/problems/binary-tree-level-order-traversal

/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution {
public:
    
    vector<vector<int>> levelOrder(TreeNode* root) {
        vector<vector<int>> level;
        
        queue<TreeNode*> q;
        q.push(root);
        q.push(NULL);
        vector<int> a;
        while(q.size() > 0)
        {
            TreeNode* node = q.front();
            if(node ==   NULL)
            {
                if(a.size() == 0)
                {
                    q.pop();
                    continue;
                }
                level.push_back(a);
                a.clear();
                q.push(NULL);
                q.pop();
                continue;
            }
            a.push_back(node->val);
            if(node->left)
            {
                q.push(node->left);
            }
            if(node->right)
            {
                q.push(node->right);
            }
            q.pop();
        }
        return level;
    }
    
};
